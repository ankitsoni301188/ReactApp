{"version":3,"sources":["views/users/User.js","views/users/UsersData.js"],"names":["useFormInput","initialValue","useState","value","setValue","onChange","e","target","User","match","user","Configuration","UserList","find","Userid","toString","params","id","userDetails","Object","entries","className","name","console","log","UserName","Password","options","label","Auth","Role","isAuth","setisAuth","isActive","setisActive","roleId","setroleId","updateUser","data","a","myHeaders","Headers","append","requestOptions","method","headers","body","fetch","SYSTEM_SETTINGS","API_URL","then","response","text","Swal","fire","icon","title","showConfirmButton","timer","lg","style","backgroundColor","textAlign","color","fontWeight","fontSize","type","placeholder","autoComplete","maxLength","obj","t","md","xl","block","onClick","formatObj","user_id","user_name","pswrd","updatedBy","raw","JSON","stringify","map","index","key","usersData","registered","role","status"],"mappings":"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","file":"static/js/5.035d0f41.chunk.js","sourcesContent":["import React ,{useState, useEffect} from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CButton, CInputGroupPrepend,CInputGroupText ,\n  CInputGroup,CInput} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport {Configuration} from '../../Configuration';\nimport usersData from './UsersData'\nimport Select from 'react-select'\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nconst User = ({match}) => {\n\n  const user = Configuration.UserList.find( user => user.Userid.toString() === match.params.id)\n  const userDetails = user ? Object.entries(user) : \n    [['Userid', (<span><CIcon className=\"text-muted\" name=\"cui-icon-ban\" /> Not found</span>)]]\n    console.log(userDetails);\n    const UserName   = useFormInput(\"\");\n    const Password = useFormInput(\"\");\n    // const isAuth   = useFormInput(\"\");\n    // const isActive = useFormInput(\"\");\n    // const roleId   = useFormInput(\"\");\n    const updatedBy   = 1;\n    const options = [\n      { value: 1, label: 'Active' },\n      { value: 0, label: 'InActive' },\n    \n    ]\n    const Auth = [\n      { value: 1, label: 'Authorised' },\n      { value: 0, label: 'Reject' },\n    ]\n    const Role = [\n      { value: 1, label: 'Admin' },\n      { value: 2, label: 'SPOC' },\n      { value: 3, label: 'Insuracnce Company' },\n      { value: 5, label: 'Data Entry Users' },\n      { value: 5, label: 'Others' },\n    ]\n    const [isAuth, setisAuth] = useState(3);\n    const isAuthVal = (e,t) => {\n      setisAuth(e.value);\n    }\n    const [isActive, setisActive] = useState(3);\n    const isActiveVal = (e,t) => {\n      setisActive(e.value);\n    }\n    const [roleId, setroleId] = useState(3);\n    const roleIdVal = (e,t) => {\n      setroleId(e.value);\n    }\n\n    const update =() =>{\n      var formatObj = {\n        user_id : user.Userid,\n        user_name: UserName.value,\n        pswrd: Password.value,\n        isAuth: isAuth,\n        isActive: isActive,\n        roleId: roleId,\n        updatedBy:1,\n      }\n      var raw = JSON.stringify(formatObj);\n      updateUser(raw);\n    }\n    const  updateUser = async(data) => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json; charset=utf-8\");\n      var requestOptions = {\n        method: 'PUT',\n       // mode: 'no-cors',\n        headers: myHeaders,\n        body: data,\n       // redirect: 'follow'\n      }\n      await fetch(Configuration.SYSTEM_SETTINGS.API_URL + \"/users/updateuser\", requestOptions)\n      .then(response => response.text())     \n         .then(data => { \n           console.log(data);\n           if (data) {\n        \n             Swal.fire({\n               icon: \"success\",\n               title:  \"Form Saved\" + data,\n               showConfirmButton: false,\n               timer: 1500,\n             })\n             console.log(data)\n          }\n         } )\n    }\n\n      return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n        <CCardHeader style={{backgroundColor:\"purple\", textAlign:\"center\", color:\"white\", fontWeight:\"bold\", fontSize:\"18px\"}}>Update Login Details</CCardHeader>\n          <CCardBody>\n            <CRow>\n              <CCol>\n                <CInputGroup className=\"mb-4\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-user\" color=\"blue\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                     {...UserName}\n                    placeholder=\"Enter UserName\"\n                    autoComplete=\"new-Landline\"\n                  />\n                </CInputGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol>\n                <CInputGroup className=\"mb-4\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-map\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                     {...Password}\n                    placeholder=\"Eneter Password\"\n                    autoComplete=\"new-Landline\"\n                    maxLength=\"10\"\n                  />\n                </CInputGroup>\n              </CCol>\n              </CRow>\n              {/* <CRow>\n              <CCol>\n                <CInputGroup className=\"mb-4\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-map\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                    // {...ramtagno}\n                    placeholder=\"Eneter Village\"\n                    autoComplete=\"new-Landline\"\n                    maxLength=\"10\"\n                  />\n                </CInputGroup>\n              </CCol>\n              </CRow> */}\n              <CRow>\n              <CCol>\n              <CRow>\n                <CCol > <Select  options={options} placeholder=\"Select Active / Inactive the User\"\n                 value={options.find(obj => obj.value === isActive)} {...isAuth.value}\n                 onChange={isActiveVal}  // set selected value  \n                 /></CCol>\n              </CRow>\n              <br></br>   \n              <CRow>\n                <CCol > <Select  options={Auth} placeholder=\"Select Authorise / Reject the User\"   \n                      value={Auth.find(obj => obj.value === isAuth)} {...isAuth.value}\n                      onChange={isAuthVal}  // set selected value   \n                      /></CCol>\n              </CRow>\n              <br></br>   \n              <CRow>\n                <CCol > <Select  options={Role} placeholder=\"Define the User Role Category \"\n                value={Role.find(obj => obj.value === roleId)} {...isAuth.value}\n                onChange={roleIdVal}  // set selected value   \n                /></CCol>\n              </CRow>\n              <br></br>   \n           \n \n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol md=\"12\" lg=\"12\" xl=\"12\">\n                <CButton\n                  className=\"mb-1\"\n                  color=\"success\"\n                  block\n                  onClick={update}\n                >\n                  Update User\n                </CButton>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader style={{backgroundColor:\"navy\", textAlign:\"center\", color:\"white\", fontWeight:\"bold\", fontSize:\"18px\"}}>User Detail</CCardHeader>\n          <CCardBody>\n            <table className=\"table table-striped table-hover\">\n              <tbody>\n                {userDetails.map(([key, value], index) => {\n                  //       debugger;\n                  //       if (index == 1) {\n\n                  //           <CInput\n                  //             type=\"text\"\n                  //             {...UserName}\n                  //             placeholder=\"Full Name of the Beneficiary\"\n                  //             autoComplete=\"\"\n                  //           />\n\n                  //       }\n\n                  //      if (key == \"IsAuth\") {\n                  //        return (\n                  //          <tr key={index.toString()}>\n                  //            <td>{`${key}:`}</td>\n                  //            <td>\n                  //              <strong>\n                  //                <Select options={options} />\n                  //              </strong>\n                  //            </td>\n                  //          </tr>\n                  //        );\n                  //      }\n                  //      if (key == \"IsActive\") {\n                  //        return (\n                  //          <tr key={index.toString()}>\n                  //            <td>{`${key}:`}</td>\n                  //            <td>\n                  //              <strong>\n                  //                <Select options={Auth} />\n                  //              </strong>\n                  //            </td>\n                  //          </tr>\n                  //        );\n                  //      }\n                  //      if (key == \"RoleId\") {\n                  //        return (\n                  //          <tr key={index.toString()}>\n                  //            <td>{`${key}:`}</td>\n                  //            <td>\n                  //              <strong>\n                  //                <Select options={Role} />\n                  //              </strong>\n                  //            </td>\n                  //          </tr>\n                  //        );\n                  //      }\n                  //      if (key == \"UpdateDate\") {\n                  //        return (\n                  //  null\n                  //        );\n                  //      }\n\n                  if (\n                    key == \"Userid\" ||\n                    key == \"UpdateDate\" ||\n                    key == \"Password\" ||\n                    key == \"UpdateDate\"\n                  ) {\n                    return null;\n                  }\n                  return (\n                    <tr key={index.toString()}>\n                      <td>{`${key}:`}</td>\n                      <td>\n                       <strong>{value}</strong> \n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n}\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\nexport default User\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n"],"sourceRoot":""}