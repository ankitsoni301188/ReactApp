{"version":3,"sources":["views/format1/FomatList.js","containers/TheLayout.js","containers/TheHeader.js","containers/TheContent.js","containers/_nav.js","containers/TheSidebar.js","containers/TheFooter.js","containers/TheHeaderDropdown.js"],"names":["getBadge","status","Format1List","props","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","details","setDetails","useEffect","fetched","getFormat1List","console","log","a","config","method","headers","apiUrl","Configuration","SYSTEM_SETTINGS","API_URL","fetch","then","response","json","data","JSON","stringify","xl","className","filename","label","key","items","fields","_style","width","sorter","filter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","color","Status","index","variant","shape","size","onClick","position","indexOf","newDetails","slice","splice","toggleDetails","show","includes","PSBCSRegNo","TheLayout","require","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","loading","setLoading","fetchPolicy","myHeaders","Headers","append","UserList","d","Date","toLocaleTimeString","interval","setInterval","clearInterval","withSubheader","inHeader","val","type","to","routes","href","name","alt","aria-current","TheContent","fluid","fallback","map","route","idx","component","path","exact","render","from","React","memo","_nav","_tag","icon","customClasses","badge","text","TheSidebar","onShowChange","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheFooter","fixed","rel","TheHeaderDropdown","history","inNav","direction","caret","src","placement","localStorage","getItem","clear","push"],"mappings":"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","file":"static/js/5.9701f872.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination\r\n} from '@coreui/react'\r\n\r\n\r\nimport {Configuration} from '../../Configuration';\r\nimport TheHeader from  '../../containers/TheHeader'\r\nimport TheSidebar from  '../../containers/TheSidebar'\r\nimport TheContent from  '../../containers/TheContent'\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\r\nimport \"sweetalert2/src/sweetalert2.scss\";\r\n// const [items, setItems] = useState(Format1ListData)\r\n\r\nconst getBadge = (status)=>{\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Format1List = (props) => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [details, setDetails] = useState([])\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/format1List?page=${newPage}`)\r\n  }\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    }\r\n    setDetails(newDetails)\r\n  }\r\n  const home = () => {\r\n    props.history.push(\"/dashboard\");\r\n   }\r\n\r\n\r\n\r\n  const fields = [\r\n    {  key: 'FullName' },\r\n    {  key: 'RegistrationNo' },\r\n    {  key: 'FatherName' },\r\n    {  key: 'DOB' },\r\n    {  key: 'MobileNo' },\r\n    {  key: 'AadharCardNo' },\r\n    {  key: 'NomineeName' },\r\n    {  key: 'NomineeRelationShip' },\r\n    {  key: 'Village' },\r\n    {  key: 'District' },\r\n    {  key: 'Mandal' },\r\n    { key: 'id' },\r\n    { key: 'FarmerId' },\r\n    { key: 'PolicyNo' },\r\n    { key: 'RamTagNo' },\r\n    { key: 'SheepTagNo' },\r\n    \r\n    // {  key: 'PSBCSRegNo' },\r\n    // {  key: 'PSBCSName' },\r\n    // {  key: 'SocietyMembershpNo' },\r\n    // {  key: 'VeterinarySergeon' },\r\n    // {  key: 'VeterinaryAddress' },\r\n    // {  key: 'VASMobileNo' },\r\n    // {  key: 'VASEmail' },\r\n    // {  key: 'GroudingDate' },\r\n    // {  key: 'GroudingPlace' },\r\n    // {  key: 'SheepNos' },\r\n    // {  key: 'TotalSheepValue' },\r\n    // {  key: 'InsuracePeriodFrom' },\r\n    // {  key: 'InsuracePeriodTime' },\r\n    // {  key: 'InsuracePeriodTo' },\r\n\r\n    // { key: 'UserName', _style: { width: '40%'} },\r\n    // 'LastName',\r\n    // { key: 'Country', _style: { width: '20%'} },\r\n    // { key: 'Status', _style: { width: '20%'} },\r\n    {\r\n      key: 'show_details',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    }\r\n  ]\r\n\r\n  const  headers = [\r\n    { label: 'id', key: 'id' },\r\n    { label: 'FarmerId', key: 'FarmerId' },\r\n    { label: 'FullName', key: 'FullName' },\r\n    { label: 'RegistrationNo', key: 'RegistrationNo' },\r\n    { label: 'FatherName', key: 'FatherName' },\r\n    { label: 'DOB', key: 'DOB' },\r\n    { label: 'MobileNo', key: 'MobileNo' },\r\n    { label: 'AadharCardNo', key: 'AadharCardNo' },\r\n    { label: 'NomineeName', key: 'NomineeName' },\r\n    { label: 'NomineeRelationShip', key: 'NomineeRelationShip' },\r\n    { label: 'Village', key: 'Village' },\r\n    { label: 'District', key: 'District' },\r\n    { label: 'Mandal', key: 'Mandal' },\r\n    { label: 'PSBCSRegNo', key: 'PSBCSRegNo' },\r\n    { label: 'PSBCSName', key: 'PSBCSName' },\r\n    { label: 'SocietyMembershpNo', key: 'SocietyMembershpNo' },\r\n    { label: 'VeterinarySergeon', key: 'VeterinarySergeon' },\r\n    { label: 'VeterinaryAddress', key: 'VeterinaryAddress' },\r\n    { label: 'VASMobileNo', key: 'VASMobileNo' },\r\n    { label: 'VASEmail', key: 'VASEmail' },\r\n    { label: 'GroudingDate', key: 'GroudingDate' },\r\n    { label: 'GroudingPlace', key: 'GroudingPlace' },\r\n    { label: 'SheepNos', key: 'SheepNos' },\r\n    { label: 'TotalSheepValue', key: 'TotalSheepValue' },\r\n    { label: 'InsuracePeriodFrom', key: 'InsuracePeriodFrom' },\r\n    { label: 'InsuracePeriodTime', key: 'InsuracePeriodTime' },\r\n    { label: 'InsuracePeriodTo', key: 'InsuracePeriodTo' },\r\n    { label: 'RamTagNo', key: 'RamTagNo' },\r\n    { label: 'PolicyNo', key: 'PolicyNo' },\r\n    { label: 'FarmerId', key: 'FarmerId' },\r\n    { label: 'SheepTagNo', key: 'SheepTagNo' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage)\r\n  }, [currentPage, page])\r\n  useEffect(() => {\r\n    if(!props.fetched) {\r\n      getFormat1List();\r\n    }\r\n    console.log('mount it!');\r\n  }, []);\r\n\r\n  const  getFormat1List = async() => {\r\n    const config = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"http://localhost:5001\",\r\n        },\r\n      };\r\n    \r\n    const apiUrl = Configuration.SYSTEM_SETTINGS.API_URL+'/format/formatlist';\r\n   await fetch(apiUrl,config)\r\n      .then((response) => response.json())\r\n      .then((data) => \r\n      Configuration.Format1List = data.response\r\n      );\r\n      console.log(\"Data\" + JSON.stringify(Configuration.Format1List ));\r\n  }\r\n//    const  deleteForm = async(id) => {\r\n//        if (id>0)\r\n//        {\r\n//          var myHeaders = new Headers();\r\n//          myHeaders.append(\"Content-Type\", \"application/json\");\r\n//          myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\r\n//          console.log(id);\r\n//          const apiUrl =\r\n//            Configuration.SYSTEM_SETTINGS.API_URL + \"/format/delete/\" + id;\r\n//          const config = {\r\n//            method: \"DELETE\",\r\n//            headers: myHeaders,\r\n//          };\r\n//          await fetch(apiUrl, config)\r\n//            .then((response) => response.text())\r\n//            .then((data) => {\r\n//              console.log(data);\r\n//              if (data) {\r\n//                Swal.fire({\r\n//                  icon: \"success\",\r\n//                  title: data,\r\n//                  showConfirmButton: false,\r\n//                  timer: 1500,\r\n//                });\r\n//                getFormat1List();\r\n//              }\r\n//            })\r\n//            .catch((error) => console.log(\"error\", error));\r\n//        }\r\n//       //console.log(result)),\r\n//    }\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n    <CCol xl={12}>\r\n      <CCard>\r\n        <CCardHeader >\r\n          <CRow>\r\n            <CCol>\r\n            <h5>Format1 List: </h5> \r\n            </CCol>\r\n\r\n            <CCol>\r\n            <small className=\"text-muted\"> \r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <CSVLink data={Configuration.Format1List}  filename={\"Format1List.csv\"} className=\"btn btn-primary float-right\"  headers ={headers} >Download CSV</CSVLink>\r\n          </small>\r\n            </CCol>\r\n          </CRow>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n    <CDataTable\r\n      items={Configuration.Format1List}\r\n      fields={fields}\r\n      //columnFilter\r\n      tableFilter\r\n      itemsPerPageSelect\r\n      itemsPerPage={5}\r\n      hover\r\n      sorter\r\n      pagination\r\n      scopedSlots = {{\r\n        'status':\r\n          (item)=>(\r\n            <td>\r\n              <CBadge color={getBadge(item.Status)}>\r\n                {item.status}\r\n              </CBadge>\r\n            </td>\r\n          ),\r\n        'show_details':\r\n          (item, index)=>{\r\n            return (\r\n              <td className=\"py-2\">\r\n                <CButton\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  shape=\"square\"\r\n                  size=\"sm\"\r\n                  onClick={()=>{toggleDetails(index)}}\r\n                  show=\"false\"\r\n                >\r\n                  {details.includes(index) ? 'Hide' : 'Show'}\r\n                </CButton>\r\n              </td>\r\n              )\r\n          },\r\n        'details':\r\n            (item, index)=>{\r\n              return (\r\n              <CCollapse show={details.includes(index)}>\r\n                <CCardBody>\r\n                  <h4>\r\n                  PSBCS Reg No:-  {item.PSBCSRegNo} \r\n                  </h4>\r\n                  {/* <p className=\"text-muted\">'PSBCSRegNo' : {item.PSBCSRegNo }  </p>\r\n                  <p className=\"text-muted\">PSBCS Name: {item.PSBCSName} </p>\r\n                  <p className=\"text-muted\">Society Membership No: {item.SocietyMembershpNo}  </p>\r\n                  <p className=\"text-muted\">Veterinary Sergeon: {item.VeterinarySergeon}  </p>\r\n                  <p className=\"text-muted\">Veterinary Address: {item.VeterinaryAddress}  </p>\r\n                  <p className=\"text-muted\">VASMobileNo: {item.VASMobileNo}  </p>\r\n                  <p className=\"text-muted\">User since: {item.VASEmail}  </p>\r\n                  <p className=\"text-muted\">User since: {item.GroudingDate}  </p>\r\n\r\n\r\n                  <p className=\"text-muted\">User since: {item.GroudingPlace}  </p>\r\n                  <p className=\"text-muted\">User since: {item.SheepNos}  </p>\r\n                  <p className=\"text-muted\">User since: {item.TotalSheepValue}  </p>\r\n                  <p className=\"text-muted\">User since: {item.InsuracePeriodFrom}  </p>\r\n                  <p className=\"text-muted\">User since: {item.InsuracePeriodTime}  </p>\r\n                  <p className=\"text-muted\">User since: {item.InsuracePeriodTo}  </p> */}\r\n                  <CButton size=\"sm\" color=\"success\">\r\n                    Print\r\n                  </CButton>\r\n                  <CButton size=\"sm\" color=\"danger\" className=\"ml-1\"  >\r\n                    Delete\r\n                  </CButton>\r\n                </CCardBody>\r\n              </CCollapse>\r\n            )\r\n          }\r\n      }}\r\n    />\r\n           </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Format1List\r\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n","import React, {useState,useEffect }  from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\nimport {Configuration} from '../Configuration';\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\nimport { Redirect } from 'react-router-dom'\nvar XMLParser = require('react-xml-parser');\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n  const [loading, setLoading] = useState(loading);\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const config = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"http://localhost:3004\",\n    },\n    //mode:\"no-cors\"\n  };\n\n  const  fetchPolicy = async() => {\n    setLoading(\"Please Wait....\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json; charset=utf-8\");\n    //myHeaders.append(\"Access-Control-Allow-Origin\",\"https://insuranceapi.us-east-1.elasticbeanstalk.com/, http://insuranceapi.us-east-1.elasticbeanstalk.com/\")\n     myHeaders.append('Access-Control-Allow-Origin', '*');\n    var data1=[];\n    const apiUrl = Configuration.SYSTEM_SETTINGS.API_URL+'/fetchPolicy/';\n  \n   await fetch(apiUrl,myHeaders)\n      .then((response) => response.json())\n      .then((data) => \n     data1 = data.response,\n      );\n      console.log(\"Data\" + JSON.stringify(Configuration.UserList ));\n\n\n      setLoading(\"Please Updated..\");\n      var d = new Date();\n      console.log('Last Policy Fetch Date: '+ d + 'Time: '+  d.toLocaleTimeString());\n      \n  }\nconst MINUTE_MS = 60000;\n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    fetchPolicy();\n  }, MINUTE_MS);\n\n  return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n}, [])\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        {/* <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/> */}\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/views/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/views/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink onClick={fetchPolicy}>Fetch Policy  {loading}</CHeaderNavLink>\n         \n         \n        </CHeaderNavItem>\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        {/* <TheHeaderDropdownNotif/>\n        <TheHeaderDropdownTasks/>\n        <TheHeaderDropdownMssg/> */}\n        <TheHeaderDropdown/>\n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CLink className=\"c-subheader-nav-link\"href=\"#\">\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\n            </CLink>\n            <CLink \n              className=\"c-subheader-nav-link\" \n              aria-current=\"page\" \n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n          </div>\n      </CSubheader>\n      \n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/dashboard\" to=\"/views/dashboard\" />\n            <Redirect from=\"/login\" to=\"/pages/login\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { freeSet } from '@coreui/icons'\nconst _nav =  [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Dashboard',\n    to: '/views/dashboard',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info',\n      text: '',\n    }\n  },\n  \n   {\n     _tag: 'CSidebarNavItem',\n     name: 'Create User',\n     to: '/register',\n     icon: <CIcon name=\"cil-user\" customClasses=\"c-sidebar-nav-icon\"/>,\n     badge: {\n       color: 'info',\n       text: '',\n     }\n   },\n\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Insurance Registration',\n    to: '/views/format1',\n    icon:  <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,//<CIcon name=\"cil-description\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info',\n      text: '',\n    }\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Create Claim ',\n    to: '/views/format3',\n    icon:  <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,//<CIcon name=\"cil-description\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info',\n      text: '',\n    }\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Tag Loss Form',\n    to: '/views/format4',\n    icon:  <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,//<CIcon name=\"cil-description\" customClasses=\"c-sidebar-nav-icon\"/>,\n    badge: {\n      color: 'info',\n      text: '',\n    }\n  },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Users',\n  //   to: '/users',\n  //   icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   }\n  // },\n\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/dashboard\">\n <label>Fouress Insurance Broking Services Pvt Ltd </label>\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"#\"  rel=\"noopener noreferrer\">Fouress Insurance Broking Service Pvt Ltd. </a>\n        <span className=\"ml-1\">(Please call on +91-7536825280 for Any Assistance).</span>\n      </div>\n      {/* <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\"> Mars Infotech </a>\n      </div> */}\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React, {Component} from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg,\n  CButton\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { Link } from \"react-router-dom\";\n\nimport { browserHistory } from 'react-router';\nimport {BrowserRouter, HashRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nconst TheHeaderDropdown = (props) => {\n  var history = useHistory();\n//   const location = useLocation();\n// const  handleLogout = (props)=> {\n\n// console.log(location.pathname);\n// localStorage.clear();\n// //props.history.rou = [];\n// //props.history.index = -1;\n// props.history.push('/login')\nconst isAuthenticated = () => {\n  //write your condition here\n\n  let isAuth = localStorage.setItem('itemName',false);\n  return isAuth;\n}\n\n\nconst UnauthenticatedRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    !isAuthenticated()\n      ? <Component {...props} />\n      : <Redirect to='/pages/login' />\n  )} />\n);\n\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    isAuthenticated()\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n);\n\n//class TheHeaderDropdown extends Component {\n \n\n  const handleLogout = (props) => {\nlocalStorage.clear();\n    history.push(\"/login\")\n   // return <Redirect to={this.state.redirect} />\n \n  }\n\n\n  \n  \n  \n// }\n//render() {\n\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-items mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <div className=\"c-avatar\">\n          <CImg\n            src={'avatars/9.png'}\n            className=\"c-avatar-img\"\n            alt=\"abcd.com\"\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        {/* <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Account</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-bell\" className=\"mfe-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-task\" className=\"mfe-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Settings</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-credit-card\" className=\"mfe-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-file\" className=\"mfe-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        */}\n       <CDropdownItem>\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />{localStorage.getItem('username')}\n        </CDropdownItem>\n        <CDropdownItem   onClick={handleLogout} >\n         <CIcon name=\"cil-lock-locked\" className=\"mfe-2\"/>\n          Log Out    \n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n//}\n}\n\nexport default TheHeaderDropdown\n"],"sourceRoot":""}