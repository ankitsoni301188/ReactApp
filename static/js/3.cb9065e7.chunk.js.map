{"version":3,"sources":["views/users/User.js","views/users/UsersData.js"],"names":["useFormInput","initialValue","useState","value","setValue","onChange","e","target","User","match","user","Configuration","UserList","find","Userid","toString","params","id","userDetails","Object","entries","className","name","UserName","Password","lg","style","backgroundColor","textAlign","color","fontWeight","fontSize","type","placeholder","autoComplete","maxLength","options","label","md","xl","block","map","index","key","usersData","registered","role","status"],"mappings":"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","file":"static/js/3.cb9065e7.chunk.js","sourcesContent":["import React ,{useState, useEffect} from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CButton, CInputGroupPrepend,CInputGroupText ,\n  CInputGroup,CInput} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport {Configuration} from '../../Configuration';\nimport usersData from './UsersData'\nimport Select from 'react-select'\nconst User = ({match}) => {\n  const user = Configuration.UserList.find( user => user.Userid.toString() === match.params.id)\n  const userDetails = user ? Object.entries(user) : \n    [['Userid', (<span><CIcon className=\"text-muted\" name=\"cui-icon-ban\" /> Not found</span>)]]\n    const UserName   = useFormInput(\"\");\n    const Password = useFormInput(\"\");\n    const options = [\n      { value: 1, label: 'Active' },\n      { value: 0, label: 'InActive' },\n    \n    ]\n    const Auth = [\n      { value: 1, label: 'Authorised' },\n      { value: 0, label: 'Reject' },\n    ]\n    const Role = [\n      { value: 1, label: 'Admin' },\n      { value: 2, label: 'SPOC' },\n      { value: 3, label: 'Insuracnce Company' },\n      { value: 5, label: 'Data Entry Users' },\n      { value: 5, label: 'Others' },\n    \n    ]\n  return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n        <CCardHeader style={{backgroundColor:\"purple\", textAlign:\"center\", color:\"white\", fontWeight:\"bold\", fontSize:\"18px\"}}>Update Login Details</CCardHeader>\n          <CCardBody>\n            <CRow>\n              <CCol>\n                <CInputGroup className=\"mb-4\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-user\" color=\"blue\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                     {...UserName}\n                    placeholder=\"Enter UserName\"\n                    autoComplete=\"new-Landline\"\n                  />\n                </CInputGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol>\n                <CInputGroup className=\"mb-4\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-map\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                     {...Password}\n                    placeholder=\"Eneter Password\"\n                    autoComplete=\"new-Landline\"\n                    maxLength=\"10\"\n                  />\n                </CInputGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol>\n                <CInputGroup className=\"mb-4\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>\n                      <CIcon name=\"cil-map\" />\n                    </CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    type=\"text\"\n                    // {...ramtagno}\n                    placeholder=\"Eneter Village\"\n                    autoComplete=\"new-Landline\"\n                    maxLength=\"10\"\n                  />\n                </CInputGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol>\n              <CRow>\n                <CCol > <Select  options={options} placeholder=\"Select Active / Inactive the User\" /></CCol>\n              </CRow>\n              <br></br>   \n              <CRow>\n                <CCol > <Select  options={Auth} placeholder=\"Select Authorise / Reject the User\" /></CCol>\n              </CRow>\n              <br></br>   \n              <CRow>\n                <CCol > <Select  options={Role} placeholder=\"Define the User Role Category \" /></CCol>\n              </CRow>\n              <br></br>   \n           \n \n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol md=\"12\" lg=\"12\" xl=\"12\">\n                <CButton\n                  className=\"mb-1\"\n                  color=\"success\"\n                  block\n                  //onClick={AddTagNo}\n                >\n                  Update User\n                </CButton>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader style={{backgroundColor:\"navy\", textAlign:\"center\", color:\"white\", fontWeight:\"bold\", fontSize:\"18px\"}}>User Detail</CCardHeader>\n          <CCardBody>\n            <table className=\"table table-striped table-hover\">\n              <tbody>\n                {userDetails.map(([key, value], index) => {\n                  //       debugger;\n                  //       if (index == 1) {\n\n                  //           <CInput\n                  //             type=\"text\"\n                  //             {...UserName}\n                  //             placeholder=\"Full Name of the Beneficiary\"\n                  //             autoComplete=\"\"\n                  //           />\n\n                  //       }\n\n                  //      if (key == \"IsAuth\") {\n                  //        return (\n                  //          <tr key={index.toString()}>\n                  //            <td>{`${key}:`}</td>\n                  //            <td>\n                  //              <strong>\n                  //                <Select options={options} />\n                  //              </strong>\n                  //            </td>\n                  //          </tr>\n                  //        );\n                  //      }\n                  //      if (key == \"IsActive\") {\n                  //        return (\n                  //          <tr key={index.toString()}>\n                  //            <td>{`${key}:`}</td>\n                  //            <td>\n                  //              <strong>\n                  //                <Select options={Auth} />\n                  //              </strong>\n                  //            </td>\n                  //          </tr>\n                  //        );\n                  //      }\n                  //      if (key == \"RoleId\") {\n                  //        return (\n                  //          <tr key={index.toString()}>\n                  //            <td>{`${key}:`}</td>\n                  //            <td>\n                  //              <strong>\n                  //                <Select options={Role} />\n                  //              </strong>\n                  //            </td>\n                  //          </tr>\n                  //        );\n                  //      }\n                  //      if (key == \"UpdateDate\") {\n                  //        return (\n                  //  null\n                  //        );\n                  //      }\n\n                  if (\n                    key == \"Userid\" ||\n                    key == \"UpdateDate\" ||\n                    key == \"Password\" ||\n                    key == \"UpdateDate\"\n                  ) {\n                    return null;\n                  }\n                  return (\n                    <tr key={index.toString()}>\n                      <td>{`${key}:`}</td>\n                      <td>\n                        <strong>{value}</strong>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n}\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\nexport default User\n","const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n"],"sourceRoot":""}